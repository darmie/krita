diff --git a/src/kstartupinfo.cpp b/src/kstartupinfo.cpp
index 76ab3be..014ab36 100644
--- a/src/kstartupinfo.cpp
+++ b/src/kstartupinfo.cpp
@@ -490,7 +490,7 @@ bool KStartupInfo::sendStartupX(Display *disp_P, const KStartupInfoId &id_P,
 #ifdef KSTARTUPINFO_ALL_DEBUG
     qCDebug(LOG_KWINDOWSYSTEM) << "sending " << msg;
 #endif
-    return KXMessages::broadcastMessageX(disp_P, NET_STARTUP_MSG, msg);
+    return true; // KXMessages::broadcastMessageX(disp_P, NET_STARTUP_MSG, msg);
 #else
     Q_UNUSED(disp_P)
     Q_UNUSED(data_P)
@@ -565,7 +565,7 @@ bool KStartupInfo::sendChangeX(Display *disp_P, const KStartupInfoId &id_P,
 #ifdef KSTARTUPINFO_ALL_DEBUG
     qCDebug(LOG_KWINDOWSYSTEM) << "sending " << msg;
 #endif
-    return KXMessages::broadcastMessageX(disp_P, NET_STARTUP_MSG, msg);
+    return true; //KXMessages::broadcastMessageX(disp_P, NET_STARTUP_MSG, msg);
 #else
     Q_UNUSED(disp_P)
     Q_UNUSED(data_P)
@@ -617,7 +617,7 @@ bool KStartupInfo::sendFinishX(Display *disp_P, const KStartupInfoId &id_P)
 #ifdef KSTARTUPINFO_ALL_DEBUG
     qCDebug(LOG_KWINDOWSYSTEM) << "sending " << msg;
 #endif
-    return KXMessages::broadcastMessageX(disp_P, NET_STARTUP_MSG, msg);
+    return true; //KXMessages::broadcastMessageX(disp_P, NET_STARTUP_MSG, msg);
 #else
     Q_UNUSED(disp_P)
     return true;
@@ -668,7 +668,7 @@ bool KStartupInfo::sendFinishX(Display *disp_P, const KStartupInfoId &id_P,
 #ifdef KSTARTUPINFO_ALL_DEBUG
     qCDebug(LOG_KWINDOWSYSTEM) << "sending " << msg;
 #endif
-    return KXMessages::broadcastMessageX(disp_P, NET_STARTUP_MSG, msg);
+    return true; //KXMessages::broadcastMessageX(disp_P, NET_STARTUP_MSG, msg);
 #else
     Q_UNUSED(disp_P)
     Q_UNUSED(id_P)
diff --git a/src/platforms/xcb/kwindowsystem.cpp b/src/platforms/xcb/kwindowsystem.cpp
index 6789b7c..84b6d4c 100644
--- a/src/platforms/xcb/kwindowsystem.cpp
+++ b/src/platforms/xcb/kwindowsystem.cpp
@@ -234,7 +234,7 @@ bool NETEventFilter::nativeEventFilter(xcb_generic_event_t *ev)
         int old_number_of_desktops = numberOfDesktops();
         bool old_showing_desktop = showingDesktop();
         unsigned long m[ 5 ];
-        NETRootInfo::event(ev, m, 5);
+        //NETRootInfo::event(ev, m, 5);
 
         if ((m[ PROTOCOLS ] & CurrentDesktop) && currentDesktop() != old_current_desktop) {
             emit s_q->currentDesktopChanged(currentDesktop());
